<root> 
	<script>
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_TIMEOFDAY, false );      //Time of day (clock).
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_HEROES, false );     //Heroes and team score at the top of the HUD.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_PANEL, false );     //Hero actions UI.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_MINIMAP, false );     //Minimap.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PANEL, false );      //Entire Inventory UI
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_SHOP, false );     //Shop portion of the Inventory. 
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_ITEMS, false );      //Player items.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_QUICKBUY, false );     //Quickbuy.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_COURIER, false );      //Courier controls.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PROTECT, false );      //Glyph.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_GOLD, false );     //Gold display.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS, false );      //Suggested items shop panel.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS, false );     //Hero selection Radiant and Dire player lists.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME, false );     //Hero selection game mode name display.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK, false );     //Hero selection clock.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_MENU_BUTTONS, false );     //Top-left menu buttons in the HUD.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND, false );     //Top-left menu buttons in the HUD.

		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD, false );      //Lefthand flyout scoreboard.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME, false );      //Endgame scoreboard.    

		GameEvents.Subscribe("CreateIngameErrorMessage", function(data) 
		{
			GameEvents.SendEventClientSide("dota_hud_error_message", 
			{
				"splitscreenplayer": 0,
				"reason": data.reason || 80,
				"message": data.message
			})
		})

		GameUI.CustomUIConfig().team_colors = {}
		GameUI.CustomUIConfig().team_names = {}

		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "#08640E;"; // Format this later using rgbtohex lib, and taking team color in settings.lua
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_BADGUYS ] = "#640808;"; // Format this later using rgbtohex lib, and taking team color in settings.lua

		GameUI.CustomUIConfig().team_names[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "Radiant";
		GameUI.CustomUIConfig().team_names[DOTATeam_t.DOTA_TEAM_BADGUYS] = "Dire";

		// fix for battlepass button being in middle of the way of clock time until
		var Parent = $.GetContextPanel().GetParent().GetParent()
		var hudElements = Parent.FindChildTraverse("HUDElements")
		var TimeUntil = hudElements.FindChildTraverse("TimeUntil");
		TimeUntil.style.marginBottom = "0px";

		//Fix 3 digits levels (up to 4)
		var Parent = $.GetContextPanel().GetParent().GetParent()
		Parent.FindChildTraverse("LevelLabel").style.width = "50px";

		// setup modified vanilla HUD in loading screen
//		if (Game.GetMapInfo().map_display_name == "mutation_5v5" || Game.GetMapInfo().map_display_name == "mutation_10v10")
			SetupLoadingScreen()

		function SetupLoadingScreen() {
			if (Parent.FindChildTraverse("GameAndPlayersRoot") == undefined || Parent.FindChildTraverse("TeamsList") == undefined || Parent.FindChildTraverse("TeamsListGroup") == undefined || Parent.FindChildTraverse("CancelAndUnlockButton") == undefined || Parent.FindChildTraverse("UnassignedPlayerPanel") == undefined || Parent.FindChildTraverse("ShuffleTeamAssignmentButton") == undefined)
				$.Schedule(0.25, SetupLoadingScreen);
			else {
				Parent.FindChildTraverse("GameAndPlayersRoot").style.backgroundColor = "rgba(50, 128, 50, 0.2)";
				Parent.FindChildTraverse("GameAndPlayersRoot").style.borderRadius = "3px";
				Parent.FindChildTraverse("GameAndPlayersRoot").style.boxShadow = "black -4px -4px 8px 8px";
				Parent.FindChildTraverse("TeamsList").style.visibility = "collapse";
				Parent.FindChildTraverse("TeamsListGroup").SetParent(Parent.FindChildTraverse("GameAndPlayersRoot"))
				Parent.FindChildTraverse("TeamsListGroup").style.verticalAlign = "top";
				Parent.FindChildTraverse("TeamsListGroup").style.width = "99%";
				if (Game.IsInToolsMode() == false) {
					Parent.FindChildTraverse("UnassignedPlayerPanel").style.visibility = "collapse";
					Parent.FindChildTraverse("CancelAndUnlockButton").style.visibility = "collapse";
					Parent.FindChildTraverse("ShuffleTeamAssignmentButton").style.visibility = "collapse";
				}
			}
		}

		// Unit Side Tab visible in mutation mod
		Parent.FindChildTraverse("HeroDisplay").style.zIndex = "1";

		// Nice topbar colors
		var topbar = hudElements.FindChildTraverse("topbar");
		var topbarRadiant = topbar.FindChildTraverse("TopBarRadiantTeam");
		var topbarDire = topbar.FindChildTraverse("TopBarDireTeam");

		for (var tbg of topbarRadiant.FindChildrenWithClassTraverse("TeamBackground")) {
			for (var tbbg of tbg.FindChildrenWithClassTraverse("TopBarBackground")) {
				tbbg.style.backgroundSize = '0%';
				tbbg.style.backgroundColor = '#000000da';
			}
		}

		for (var tbg of topbarDire.FindChildrenWithClassTraverse("TeamBackground")) {
			for (var tbbg of tbg.FindChildrenWithClassTraverse("TopBarBackground")) {
				tbbg.style.backgroundSize = '0%';
				tbbg.style.backgroundColor = '#000000da';
			}
		}

		<!-- Vanilla pick screen -->
		var PreGame = $.GetContextPanel().GetParent().GetParent().FindChildTraverse("PreGame")
		var PregameBG = PreGame.FindChildTraverse("PregameBG")
		var AmbientFX = PreGame.FindChildTraverse("AmbientFXContainer")
		var MainContents = PreGame.FindChildTraverse("MainContents")
		var MainHeroPickScreenContents = PreGame.FindChildTraverse("MainHeroPickScreenContents")
		var HeroPickLeftColumn = PreGame.FindChildTraverse("HeroPickLeftColumn")
		var HeroGrid = PreGame.FindChildTraverse("HeroGrid")
		var GridCore = PreGame.FindChildTraverse("GridCore")
		var PreMinimapContainer = PreGame.FindChildTraverse("PreMinimapContainer")

		PreGame.style.backgroundColor = "none";
//		Minimap.style.visibility = "collapse";
//		BattlePass.style.visibility = "collapse";
//		GridTeam.style.visibility = "collapse";
//		HeroInspect.style.visibility = "collapse";
//		HeroFilters.style.visibility = "collapse";
		PregameBG.style.opacity = "0";
		AmbientFX.style.backgroundColor = "#000000fa";
		MainHeroPickScreenContents.style.height = "87%";
		HeroPickLeftColumn.style.height = "100%";
		HeroGrid.style.height = "92%";
		GridCore.style.height = "605px";
		PreMinimapContainer.style.height = "270px";

		HidePickScreen()

		function HidePickScreen() {
			if (!Game.GameStateIs(3)) {
//				$.Msg("Hide Pick Screen and Repeat!")
				PreGame.style.opacity = "0";
				$.Schedule(1.0, HidePickScreen)
			}
			else {
				PreGame.style.opacity = "1";				
			}
		}
	</script>

	<Panel>
		<!-- CustomUIElements go here.-->
		<CustomUIElement type="GameInfo" layoutfile="file://{resources}/layout/custom_game/imba_game_info.xml" />
		<CustomUIElement type="HeroSelection" layoutfile="file://{resources}/layout/custom_game/multiteam_hero_select_overlay.xml" />
		<CustomUIElement type="HeroSelection" layoutfile="file://{resources}/layout/custom_game/vanilla_hero_selection.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/statcollection.xml"/>
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/barebones_notifications.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/hud_hero_demo.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/ardm_precache.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/gg.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/combat_events.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/hero_selection.xml" /> 
		<CustomUIElement type="GameInfo" layoutfile="file://{resources}/layout/custom_game/imba_game_info.xml" /> 
<!--		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/diretide.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/diretide_note.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/roshan_health_bar.xml" /> --> <!-- Enable only during diretide -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/imba_imr.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/mutation.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/precache.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/overthrow_item_notification.xml" /> 
		<CustomUIElement type="EndScreen" layoutfile="file://{resources}/layout/custom_game/imba_end_screen.xml" />
<!--	<CustomUIElement type="EndScreen" layoutfile="file://{resources}/layout/custom_game/multiteam_end_screen.xml" /> -->
		<CustomUIElement type="FlyoutScoreboard" layoutfile="file://{resources}/layout/custom_game/multiteam_flyout_scoreboard.xml" />
<!--	<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/team_select.xml" /> -->
	</Panel>
</root>
